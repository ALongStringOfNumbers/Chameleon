buildscript {
    repositories {
        jcenter();
        maven {
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}

plugins {
    id "com.jfrog.bintray" version "1.7"
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'net.minecraftforge.gradle.forge'

version = "${minecraft_version}-${mod_version}"
group= "com.jaquadro.minecraft.chameleon" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "Chameleon"

sourceCompatibility = targetCompatibility = "1.8"
compileJava {
    sourceCompatibility = targetCompatibility = "1.8"
}

minecraft {
    version = forge_version
    runDir = "run"
    mappings = forge_mappings
    replace '@VERSION@', project.version
}

sourceSets.main {
    java {
        srcDirs project.projectDir.getPath() + '/src'
    }
    resources {
        srcDirs project.projectDir.getPath() + '/resources'
    }
}

sourceSets.api {
    java {
        //srcDirs project.projectDir.getPath() + '/api'
    }
}

dependencies {

}

processResources
        {
            // this will ensure that this task is redone when the versions change.
            inputs.property "version", project.version
            inputs.property "mcversion", project.minecraft.version

            // replace stuff in mcmod.info, nothing else
            from(sourceSets.main.resources.srcDirs) {
                include 'mcmod.info'

                // replace version and mcversion
                expand 'version':project.version, 'mcversion':project.minecraft.version
            }

            // copy everything else, thats not the mcmod.info
            from(sourceSets.main.resources.srcDirs) {
                exclude 'mcmod.info'
            }
        }

jar {
    include "com/jaquadro/minecraft/chameleon/**"
    include "assets/**"
    include "mcmod.info"
    include "pack.mcmeta"
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'deobf'
}

artifacts {
    archives deobfJar
    archives sourceJar
    archives jar
}

publishing.publications {
    Chameleon(MavenPublication) {
        groupId = project.group
        artifactId = project.archivesBaseName
        version = project.version
        artifact deobfJar
        artifact sourceJar
        artifact jar
    }
}

bintrayUpload.dependsOn build

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
    publications = ['Chameleon']
    publish = true
    pkg {
        repo = 'dev'
        name = 'chameleon'
        version {
            name = project.version
            released = new Date()
        }
    }
}